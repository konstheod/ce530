extern double **mna;
extern double *x, *b;
void MNA_init(int node_sum, int m2_elem){
	int i;

	//calloc ston pinaka mna
	mna = (double*) calloc((node_sum+m2_elem-1),sizeof(double));
	if(mna == NULL){
		printf("Error to malloc!\n");
		return(-1);
	}
	for(i==0; i<(node_sum+m2_elem-1); i++){
		mna[i] = (double*) calloc((node_sum+m2_elem-1),sizeof(double));
		if(mna[i] == NULL){
			printf("Error to malloc!\n");
			return(-1);
		}
	}

	//calloc sto dianusma twn agnwstwn
	x = (double*) calloc((node_sum+m2_elem-1),sizeof(double));
	if(x == NULL){
		printf("Error to malloc!\n");
		return(-1);
	}

	//calloc sto dianusma b
	b = (double*) calloc((node_sum+m2_elem-1),sizeof(double));
	if(b == NULL){
		printf("Error to malloc!\n");
		return(-1);
	}

}

void MNA_conductance(){

}
void MNA_power(){

}
void MNA_voltage(){

}

void constructor(int node_sum, int m2_elem, struct element *head){
	MNA_init(node_sum, m2_elem);


}

void free_mna(double **mna, double *x,  double *b, node_sum, int m2_elem){
    int i;
    
    free(x);
    free(b);
    
    for(i==0; i<(node_sum+m2_elem-1); i++){
    
	free(mna[i]);
    }
}
